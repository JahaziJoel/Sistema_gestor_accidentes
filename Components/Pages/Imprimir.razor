@page "/registro/imprimir/{id}"
@inject IJSRuntime JSx
@using System.Text.Json
@rendermode InteractiveServer
@inject NavigationManager NavMan
@layout PrintLayout

<h1>Imprimir Registro</h1>

<div class="mb-3">
    <b>Fecha: </b> @reporte.Fecha
</div>
<div>
    <b>Descripcion: </b> @reporte.Descripcion
</div>
<div><b>Costo Estimado: </b>
    <LabelDinero Valor="@reporte.CostoEstimado" />
</div>
<div><b>Mueros: </b>
    @reporte.Muertos
</div>
<div><b>Heridos: </b>
    @reporte.Heridos
</div>
<div><b>Vehiculos Involucrados: </b>
    @reporte.VehiculosInvolucrados
</div>


@code{
    [Parameter]
    public string id {get; set;} = "";

    Reporte? reporte = new Reporte();

    protected override async Task OnAfterRenderAsync(bool firstRender){
        if (firstRender){
            
            var registrosJson = await JSx.InvokeAsync<string>("localStorage.getItem", "registros");

            if(registrosJson != null){

                var registros = JsonSerializer.Deserialize<List<Reporte>>(registrosJson);

                foreach(var item in registros){
                    if(item.Id == id){
                        reporte = item;
                        break;
                    }
                }

                if(reporte.Id == null || reporte.Id.Length < 5){
                    await JSx.InvokeVoidAsync("alert", "No se encontro registro");
                    NavMan.NavigateTo("registro");
                }

                StateHasChanged();

                await JSx.InvokeVoidAsync("window.print");
                await JSx.InvokeVoidAsync("window.close");

            }else{
                await JSx.InvokeVoidAsync("alert", "No se encuentra registro");
                NavMan.NavigateTo("registro");
            }
        }
    }
}
