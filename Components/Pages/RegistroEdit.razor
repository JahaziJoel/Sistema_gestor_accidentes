@page "/registro/nuevo"
@page "/registro/editar/{id}"
@inject NavigationManager NavMan
@inject IJSRuntime JSx
@rendermode InteractiveServer
@using System.Text.Json

<PageTitle>Registros</PageTitle>
<h3>Datos del Registro</h3>

<EditForm Model="@registro" OnValidSubmit="@GuardarRegistro">
    <DataAnnotationsValidator />

    <div class="mb-3">
        <label for="fecha" class="form-label">Fecha</label>
        <InputDate  id="fecha" class="form-control" @bind-Value="@registro.Fecha" />
        <ValidationSummary For="@(() => registro.Fecha)" />
    </div>

    <div class="mb-3">
        <label for="descripcion" class="form-label">Descripcion</label>
        <InputTextArea  id="descripcion" class="form-control" @bind-Value="@registro.Descripcion" />
        <ValidationSummary For="@(() => registro.Descripcion)"></ValidationSummary>
    </div>

    <div class="mb-3">
        <label for="Muertos" class="form-label">Costo Estimado</label>
        <InputNumber id="CostoEstimado" class="form-control" @bind-Value="@registro.CostoEstimado" />
        <ValidationSummary For="@(() => registro.CostoEstimado)"></ValidationSummary>
    </div>

    <div class="row">
        <div class="col-4">
            <div class="mb-3">
                <label for="Muertos" class="form-label">Muertos</label>
                <InputNumber id="Muertos" class="form-control" @bind-Value="@registro.Muertos" />
                <ValidationSummary For="@(() => registro.Muertos)"></ValidationSummary>
            </div>
        </div>
        <div class="col-4">
            <div class="mb-3">
                <label for="Heridos" class="form-label">Heridos</label>
                <InputNumber id="Heridos" class="form-control" @bind-Value="@registro.Heridos" />
                <ValidationSummary For="@(() => registro.Heridos)"></ValidationSummary>
            </div>

        </div>
        <div class="col-4">
            <div class="mb-3">
                <label for="VehiculosInvolucrados" class="form-label">Vehiculos Involucrados</label>
                <InputNumber id="VehiculosInvolucrados" class="form-control"
                    @bind-Value="@registro.VehiculosInvolucrados" />
                <ValidationSummary For="@(() => registro.VehiculosInvolucrados)"></ValidationSummary>
            </div>

        </div>

    </div>








<div class="text-center">
    <button type="submit" class="btn btn-primary">Guardar</button>
</div>
</EditForm>

@code{
    [Parameter]
    public string? id {get; set; } = null;

    private Reporte registro = new Reporte();

    List<Reporte> registros = new List<Reporte>();

    private void GuardarRegistro(){
        if(string.IsNullOrEmpty(registro.Id)){
            registro.Id = Guid.NewGuid().ToString();
            registros.Add(registro);
        }else{
            var index = registros.FindIndex(x => x.Id == registro.Id);
            registros[index] = registro;
        }

        JSx.InvokeVoidAsync("localStorage.setItem", "registros", JsonSerializer.Serialize(registros));

        NavMan.NavigateTo("registro");
    }
    protected override async Task OnAfterRenderAsync(bool firstRender){
        if(firstRender){

            var registrosJson = await JSx.InvokeAsync<string>("localStorage.getItem", "registros");

            if(registrosJson != null){

                registros = JsonSerializer.Deserialize<List<Reporte>>(registrosJson);

                if(id != null){
                    registro = registros.FirstOrDefault(r => r.Id == id)?? new Reporte();
                }

                StateHasChanged();

            }
        }

    }
}